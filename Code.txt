#include <iostream>
#include <Windows.h>
#include <vector>
#include <cmath>
#include <cstdlib>
#include <ctime>



using namespace std; 
void simplecalculator(double num1, double num2, char operation, double output, string msgchoose)
{
	if (operation == '+')
	{
		cout << "Addition Of [" << num1 << operation << num2 << "] = " << output<<"\n";
	}
	else if (operation == '-')
	{
		cout << "Subtract Of [" << num1 << operation << num2 << "] = " << output <<"\n";
	}
	else if (operation == '*')
	{
		cout << "Multiplication Of [" << num1 << operation << num2 << "] = " << output << "\n";
	}
	else
	{
		cout << "Divide Of [" << num1 << operation << num2 << "] = " << output << "\n";
	}




}
void arraycaclulator (double output , char operation)
{

	if (operation == '+')
	{
		cout << "Addition Of [Array Nums] = " << output << "\n";
	}
	else if (operation == '-')
	{
		cout << "Subtract Of [Array Nums] = " << output << "\n";
	}
	else if (operation == '*')
	{
		cout << "Multiplication Of [Array Nums] = " << output << "\n";
	}
	else
	{
		cout << "Divide Of [Array Nums] = " << output << "\n";
	}



}
void proffcalculator(int side, double num1,double num)
{
	if (side == 1)
	{
		if (num1 == 0)
		{
			cout << num << ":is [Even Number]\n";
		}
		else if (num1 == 1)
		{
			cout << num << ":is [Odd Number]\n";
		}
	}
	else if (side == 2)
	{
		cout << "Random Number: " << num1 << endl;
	}
	else if (side == 3)
	{
		cout << "Square Root for [" << num << "] is :" << num1<<"\n";
	}
	else if (side == 4)
	{
		cout << "The Biggest number is: " << num1 << std::endl;
	}
	else if (side == 5)
	{
		cout << "The Smallest number is: " << num1 << std::endl;
	}
}



int main()
{
	// WHILE LOOP (MAIN)
	while (true)
	{

		string msgchoose = "================================\nPress [1] for Simple Caclulator\nPress [2] for Array Calculator\nPress [3] For Proffesional Caclulator\n\nPress [0] for Exit\nChoice : ";
		int choice;
		cout << msgchoose;
		//WHILE LOOP START (CHOICE)
		while (true)
		{
			cin >> choice;
			if (choice != 1 && choice != 2 && choice != 3 && choice != 0)
			{
				cout << "Invalid Input\n" << msgchoose;
				cin.clear();
				cin.ignore(10000, '\n');
				continue;
			}
			else break;
		}
		//WHILE LOOP END (CHOICE)

		//CONDITION START {EXIT} 
		if (choice == 0)
		{
			cout << "Application Closed";
			Sleep(100);

			exit(0);
		}
		//CONDITION END {EXIT}

		//{SIMPLE CALCULATOR} START
		if (choice == 1)
		{
			cout << "=======================\n== SIMPLE CALCULATOR ==\n=======================\n";
			double num1, num2, output;
			char operation;




			//WHILE LOOP START (NUMBER ONE)
			while (true)
			{
				cout << "Please Enter Number One : "; cin >> num1;
				if (!num1)
				{
					cout << "Invalid Input\n";
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else break;
			}
			//WHILE LOOP END (NUMBER ONE)



			//WHILE LOOP START (OPERATION)
			while (true)
			{
				cout << "Please Choose An Operation (+ . / . * . -) : "; cin >> operation;
				if (operation != '*' && operation != '-' && operation != '/' && operation != '+')
				{
					cout << "Invalid Input\n";
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else break;
			}
			//WHILE LOOP END (OPERATION)



			//WHILE LOOP START (NUMBER TWO)
			while (true)
			{
				cout << "Please Enter Number Two : "; cin >> num2;
				if (!num2)
				{
					cout << "Invalid Input\n";
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else break;
			}
			//WHILE LOOP END (NUMBER ONE)



			//SWITCH CASE SECTION [START] 
			switch (operation)
			{
			case '+':
				output = num1 + num2;
				break;
			case '-':
				output = num1 - num2;
				break;
			case '*':
				output = num1 * num2;
				break;
			case '/':
				if (num2 == 0)
				{
					cout << "Math Error\n";
					break;
				}
				else
					output = num1 / num2;
				break;
			}
			//SWITCH CASE SECTION [END] 

			simplecalculator(num1, num2, operation, output, msgchoose);
		}
		//{SIMPLE CALCULATOR} END

		//{ARRAY CALCULATOR} START 
		if (choice == 2)
		{
			cout << "======================\n== ARRAY CALCULATOR ==\n======================\n";
			int index;

			while (true)
			{
				cout << "Please Enter Count Of Array Numbers you Want : ";
				cin >> index;
				if (cin.fail() || index <= 2) { // Check if input is not a number or a negative number
					cout << "Invalid input\nCount Of Number Must be >= 2\n";
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else {
					break;
				}
			}

			cout << "Please Enter [" << index << "] Numbers In One Row : \n";
			vector<int> arraynums(index);

			for (int i = 0; i < index; i++)
			{
				cin >> arraynums[i];
				if (cin.fail()) {
					cout << "Invalid input\n";
					cin.clear();
					cin.ignore(10000, '\n');
					i--; // go back to the previous index to re-enter the value
					continue;
				}
			}

			char operation;
			double output = 0;
			//WHILE LOOP START (OPERATION)
			while (true)
			{

				cout << "Please Choose An Operation (+ . / . * . -) : "; cin >> operation;
				if (operation != '*' && operation != '-' && operation != '/' && operation != '+')
				{
					cout << "Invalid Input\n";
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else break;
			}
			//WHILE LOOP END (OPERATION)


			//SWITCH CASE SECTION [START] 
			switch (operation)
			{
			case '+':
				output = 0; // initialize the output to 0
				for (int i = 0; i < arraynums.size(); i++) {
					output += arraynums[i]; // add the current element to the output
				}
				break;

			case '-':
				output = arraynums[0]; // initialize the output to the first element
				for (int i = 1; i < arraynums.size(); i++) {
					output -= arraynums[i]; // subtract the current element from the output
				}
				break;

			case '/':
				output = arraynums[0]; // initialize the output to the first element
				for (int i = 1; i < arraynums.size(); i++) {
					if (arraynums[i] == 0) {
						cout << "Math Error\n";
						return 0;
					}
					output /= arraynums[i]; // divide the output by the current element
				}
				break;
			case '*':

				output = arraynums[0]; // initialize the output to the first element
				for (int i = 1; i < arraynums.size(); i++) {
					output *= arraynums[i]; // By the current element from the output
				}
				break;


			default:
				cout << "Invalid Operation\n";
				break;
			}
			//SWITCH CASE SECTION [END] 

			arraycaclulator(output, operation);

		}
		//{ARRAY CALCULATOR} END

		//{Proffesional CALCULATOR} START
		if (choice == 3)
		{
			int side;
			string msg = "- [1] for Even , Odd Check\n- [2] for Random Number\n- [3] for Square Root\n- [4] for Get Biggest Number\n- [5] for Get Smallest Number\n- [6] Comming SOON\nChoice : ";
			cout << "======================\n== Proff CALCULATOR ==\n======================\n" << msg;
			int proffchoice;

			//Choice Check WHILE LOOP {START}
			while (true)

			{
				cin >> proffchoice;
				//IF Condition Check START
				if (proffchoice != 1 && proffchoice != 2 && proffchoice != 3 && proffchoice != 4 && proffchoice != 5 && proffchoice != 6)
				{
					cout << "Invalid input\n" << msg;
					cin.clear();
					cin.ignore(10000, '\n');
					continue;
				}
				else
				{
					break;
				}
				//IF IF Condition Check END


			}
			//Choice Check WHILE LOOP {END}


			//EVEN ODD CHECK {START}
			if (proffchoice == 1)
			{
				side = 1;
				cout << "Even , Odd Numbers Check\n";
				int num;
				while (true)

				{
					cout << "Please Enter A Number :"; cin >> num;
					if (cin.fail())
					{
						cout << "Invalid input\n" << msg;
						cin.clear();
						cin.ignore(10000, '\n');
						continue;

					}
					else break;
				}

				int checker = num % 2;
				proffcalculator(side, checker, num);
			}
			//EVEN ODD CHECK {END}



			//RANDOM NUMBER {START}
			if (proffchoice == 2)
			{
				side = 2;
				cout << "[Random Number Picker]\n";
				int index;
				while (true)
				{
					cout << "Please Enter Count Of Numbers you Want : ";
					cin >> index;
					if (cin.fail() || index <= 2) { // Check if input is not a number or a negative number
						cout << "Invalid input\nCount Of Number Must be >= 2\n";
						cin.clear();
						cin.ignore(10000, '\n');
						continue;
					}
					else {
						break;
					}
				}

				cout << "Please Enter [" << index << "] Numbers In One Row : \n";
				vector<int> arraynums(index);

				for (int i = 0; i < index; i++)
				{
					cin >> arraynums[i];
					if (cin.fail()) {
						cout << "Invalid input\n";
						cin.clear();
						cin.ignore(10000, '\n');
						i--; // go back to the previous index to re-enter the value
						continue;
					}
				}
				srand(time(0));
				// select a random index from the array
				int randomIndex = rand() % arraynums.size();

				// retrieve the random number from the array
				int randomNumber = arraynums[randomIndex];


				proffcalculator(side, randomNumber, randomIndex);
			}
			//RANDOM NUMBER {END}



			//Square Root {START}
			if (proffchoice == 3)
			{
				side = 3; 

				cout << "Square Root\n";
				double num;
				while (true)

				{
					cout << "Please Enter A Number :"; cin >> num;
					if (cin.fail())
					{
						cout << "Invalid input\n" << msg;
						cin.clear();
						cin.ignore(10000, '\n');
						continue;

					}
					else break;
				}

				double result = sqrt(num);
				proffcalculator(side, result, num);

			}
			//Square Root {END}



			//The Biggest Number from Array (START)
			if (proffchoice == 4)
			{
				side = 4; 
				cout << "The Biggest Number From Group\n";
				int index;
				while (true)
				{
					cout << "Please Enter Count Of Numbers you Want : ";
					cin >> index;
					if (cin.fail() || index <= 2) { // Check if input is not a number or a negative number
						cout << "Invalid input\nCount Of Number Must be >= 2\n";
						cin.clear();
						cin.ignore(10000, '\n');
						continue;
					}
					else {
						break;
					}
				}

				cout << "Please Enter [" << index << "] Numbers In One Row : \n";
				vector<int> arraynums(index);

				for (int i = 0; i < index; i++)
				{
					cin >> arraynums[i];
					if (cin.fail()) {
						cout << "Invalid input\n";
						cin.clear();
						cin.ignore(10000, '\n');
						i--; // go back to the previous index to re-enter the value
						continue;
					}
				}

				int max = arraynums[0]; // assume first number is the largest

				for (int i = 1; i < arraynums.size(); i++) {
					if (arraynums[i] > max) {
						max = arraynums[i]; // update max if current number is larger
					}
				}

				proffcalculator(side ,max,0);
			} 
			//The Biggest Number from Array (END)



			//The Smallest Number from Array (START)
			if (proffchoice == 5)
			{
				side = 5;
				cout << "The Smallest Number From Group\n";
				int index;
				while (true)
				{
					cout << "Please Enter Count Of Numbers you Want : ";
					cin >> index;
					if (cin.fail() || index <= 2) { // Check if input is not a number or a negative number
						cout << "Invalid input\nCount Of Number Must be >= 2\n";
						cin.clear();
						cin.ignore(10000, '\n');
						continue;
					}
					else {
						break;
					}
				}

				cout << "Please Enter [" << index << "] Numbers In One Row : \n";
				vector<int> arraynums(index);

				for (int i = 0; i < index; i++)
				{
					cin >> arraynums[i];
					if (cin.fail()) {
						cout << "Invalid input\n";
						cin.clear();
						cin.ignore(10000, '\n');
						i--; // go back to the previous index to re-enter the value
						continue;
					}
				}

				int min = arraynums[0]; // assume first number is the largest

				for (int i = 1; i < arraynums.size(); i++) {
					if (arraynums[i] < min) {
						min = arraynums[i]; // update min if current number is larger
					}
				}

				proffcalculator(side, min, 0);
			}
			//The Smallest Number from Array (END)


		}
		//{Proffesional CALCULATOR} END 


	}
	//WHILE LOOP MAIN (END)
}
